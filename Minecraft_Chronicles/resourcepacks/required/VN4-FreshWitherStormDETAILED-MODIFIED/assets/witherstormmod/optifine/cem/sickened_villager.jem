{
	"credit": "Made with Blockbench",
	"textureSize": [64, 64],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations__Modified_by_VN4",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			],
			"animations": [
				{
					"var.r": "pi*random(id)*4",
					"var.b": "var.r +age/if(is_child, 45, 80)*pi*2",
					"var.ls": "var.r +limb_swing/1.2/if(is_child, 3, 1)",
					"var.hurt": "-sin(hurt_time/2)*hurt_time/10"
				},
				{
					"head.rx": "torad(head_pitch)/1.4 +cos(var.ls*2)/8*limb_speed/1.3 +torad(5 +clamp(-5*limb_speed*3,-5, 0)) -cos(var.b)/40 -sin(pi*2*swing_progress)/3 +torad( 30 +30*sin(limb_swing/1.5) )*var.hurt",
					"head.ry": "torad(head_yaw)/1.2 +sin(limb_swing/2.5)*var.hurt",
					"head.rz": "torad(head_yaw)/8  +sin(pi/4+var.ls)/15*limb_speed/1.3",
					"head.tx": "                   -sin(     var.ls)   *limb_speed/1.3/if(is_child, 1.5, 1)",
					"head.ty": "0.5 +( sin(var.b)/4 -sin(torad(if(is_child||limb_speed>=0.6, -45, 45))+var.ls*2 +if(is_child||limb_speed>=0.6, 0, -cos(var.ls*2)/3))*if(is_child, 1, 1.5)*limb_speed)/if(is_child, 1.5, 1) +if(is_child, -1*limb_speed, 0) +sin(pi*swing_progress)*2 +( -sin(limb_swing/2)/2 -0.5 )*var.hurt",
					"head.tz": "     (-sin(var.b)/4 +sin(-pi*swing_progress)*2 )/if(is_child, 1.5, 1)",
					"hat.rx": "head.rx",
					"hat.ry": "head.ry",
					"hat.rz": "head.rz",
					"hat.tx": "head.tx*if(is_child, 1.5, 1)",
					"hat.ty": "head.ty*if(is_child, 1.5, 1)",
					"hat.tz": "head.tz*if(is_child, 1.5, 1)",
					"hat.sx": "if(is_child, 1.5, 1)",
					"hat.sy": "hat.sx",
					"hat.sz": "hat.sx",
					"body.rx": "sin(var.b)/40 +clamp(torad(5)*limb_speed, -pi/4, torad(50)) +sin(pi*swing_progress)/3 +torad( -3 -10*sin(limb_swing/2) )   *var.hurt",
					"body.ry": "sin(pi/4+var.ls)/10*limb_speed/1.3 +torad(head_yaw)/6                                 +torad(     20*cos(limb_swing/3) )   *var.hurt",
					"body.rz": "head.rz -torad(head_yaw)/8 -sin(pi/4+var.ls)/10*limb_speed/1.3                             -(        sin(limb_swing/2) )/22*var.hurt",
					"body.tx": "head.tx",
					"body.ty": "head.ty*if(is_child, 1.3, 1)",
					"body.tz": "head.tz"
				},
				{
					"right_arm.rx": "torad(-10) +torad(head_yaw)/8 -sin(var.ls)/6*limb_speed/1.3 -sin(var.ls*2)/6*limb_speed/1.3 +clamp(torad(-120)*limb_speed*2, torad(-70), 0) +sin(-pi/3+var.b)/20 -sin(pi*swing_progress*2) +torad( sin(limb_swing/1.7)*30 -30 )*var.hurt",
					"left_arm.rx": " torad(-10) -torad(head_yaw)/8 +sin(var.ls)/6*limb_speed/1.3 -sin(var.ls*2)/6*limb_speed/1.3 +clamp(torad(-120)*limb_speed*2, torad(-70), 0) +sin(-pi/3+var.b)/20 -sin(pi*swing_progress*2) +torad( sin(limb_swing/2  )*30 -30 )*var.hurt",
					"right_arm.ry": "clamp(-(head_yaw/65)*right_arm.rx, -pi/4, pi/4) +torad(-5 +25)*limb_speed +cos(var.b)/20 +sin(-pi/2*swing_progress*2)/4",
					"left_arm.ry": " clamp(-(head_yaw/65)* left_arm.rx, -pi/4, pi/4) +torad( 5 -25)*limb_speed -cos(var.b)/20 -sin(-pi/2*swing_progress*2)/4",
					"right_arm.rz": "torad(if(is_in_water, 15, 5)) +clamp(-torad(head_pitch)/8, 0, pi/4) -sin(pi*swing_progress)/2",
					"left_arm.rz": " torad(if(is_in_water,-15,-5)) +clamp( torad(head_pitch)/8,-pi/4, 0) +sin(pi*swing_progress)/2",
					"right_arm.tx": "-5 +body.tx",
					"left_arm.tx": "  5 +body.tx",
					"right_arm.ty": "2.5 -(1*limb_speed) +body.ty +sin(var.b-pi/3)/5",
					"left_arm.ty": " 2.5 -(1*limb_speed) +body.ty +sin(var.b-pi/3)/5",
					"right_arm.tz": "-sin(var.b)/4 +torad(head_yaw) -sin(pi*swing_progress)*4",
					"left_arm.tz": " -sin(var.b)/4 -torad(head_yaw) -sin(pi*swing_progress)*4"
				},
				{
					"right_leg.rx": "if(is_riding, right_leg.rx, sin(var.b)/80 +clamp( sin(var.ls)/6 +sin(var.ls)/1.5*limb_speed/1.3 +torad(10)*limb_speed, -pi/3, pi/3)) -torad(head_yaw)/30 +sin(-pi*swing_progress)/5 +torad(-40 -20*sin(limb_swing/2) )*var.hurt",
					"left_leg.rx": " if(is_riding,  left_leg.rx, sin(var.b)/80 +clamp(-sin(var.ls)/6 -sin(var.ls)/1.5*limb_speed/1.3 +torad(10)*limb_speed, -pi/3, pi/3)) +torad(head_yaw)/30 +sin(-pi*swing_progress)/5 +torad(-40 +20*sin(limb_swing/2) )*var.hurt",
					"right_leg.ry": "if(is_riding, right_leg.ry, torad( 5))",
					"left_leg.ry": " if(is_riding,  left_leg.ry, torad(-5))",
					"right_leg.rz": "if(is_riding, right_leg.rz, torad( 2)) +torad(-sin(limb_swing/2) +5)*var.hurt",
					"left_leg.rz": " if(is_riding,  left_leg.rz, torad(-2)) +torad( sin(limb_swing/2) -5)*var.hurt",
					"right_leg.tx": "-2 -sin(var.ls)*limb_speed/1.3",
					"left_leg.tx": "  2 -sin(var.ls)*limb_speed/1.3",
					"right_leg.ty": "0.2 +clamp(12 +( cos(var.ls)*4)*limb_speed/1.3 +(1*limb_speed) +if(is_child, head.ty*limb_speed*2, 0), 0, 12.2)",
					"left_leg.ty": " 0.2 +clamp(12 +(-cos(var.ls)*4)*limb_speed/1.3 +(1*limb_speed) +if(is_child, head.ty*limb_speed*2, 0), 0, 12.2)",
					"right_leg.tz": "clamp( cos(var.ls)*6 *limb_speed/1.3 +(3*limb_speed), 0, 1) -0.2 +if(is_riding, 0, -sin(var.b)/3) +torad(head_yaw)/2 +sin(pi*swing_progress)*2 +( -1 -sin(limb_swing/2) )*var.hurt",
					"left_leg.tz": " clamp(-cos(var.ls)*6 *limb_speed/1.3 +(3*limb_speed), 0, 1) -0.2 +if(is_riding, 0, -sin(var.b)/3) -torad(head_yaw)/2 +sin(pi*swing_progress)*2 +( -1 -sin(limb_swing/2) )*var.hurt"
				},
				{
					"r_eye_top.ty": "clamp(head_pitch/60, -0.2 -0.6*random(id), 0.3*random(id)) +(-1.5 -cos(limb_swing/3)/2)/2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +if(is_child, -0.25*clamp(cos(var.r+age/120)*10, 0, 1) -0.5*clamp(limb_speed*6, 0, 1), 0) +clamp(-8 +cos(var.r +age/40)*12, 0, 1)/3",
					"l_eye_top.ty": "clamp(head_pitch/60, -0.2 -0.6*random(id), 0.3*random(id)) +(-1.5 -cos(limb_swing/3)/2)/2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +if(is_child, -0.25*clamp(cos(var.r+age/120)*10, 0, 1) -0.5*clamp(limb_speed*6, 0, 1), 0) +clamp(-8 +cos(var.r +age/40)*12, 0, 1)/3",
					"ctrl_r_pupil.tx": " 0.5 -head_yaw/(80 +160) +clamp(sin(var.r+age/27) +sin(var.r+age/16), -0.1, 0.1)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)*clamp(59*4 -sin(var.r+age/187)*60*4, 0, 1)",
					"ctrl_l_pupil.tx": "-0.5 -head_yaw/(80 +160) +clamp(sin(var.r+age/27) +sin(var.r+age/16), -0.1, 0.1)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)*clamp(59*4 -sin(var.r+age/187)*60*4, 0, 1)",
					"ctrl_r_pupil.ty": "0.5 +clamp(head_pitch/80, -0.3 -0.2*random(id), 0.5)/(1 +clamp(sin(var.r+age/73)*3, 0, 1)*2) +clamp(sin(var.r+age/38) +sin(var.r+age/13), -0.1, 0.1)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)    +(-1.5 -cos(limb_swing/3)/2)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) -if(between(random(id), 0, 0.2), -torad(10)*clamp(sin(limb_speed*3), 0, 1), 0) +clamp(-8 +cos(var.r +age/40)*12, 0, 1)/6",
					"ctrl_l_pupil.ty": "ctrl_r_pupil.ty",
					"right_blink.sy": "clamp((1.5 -abs(sin(var.r+age/8)*6))*clamp(-32 +cos((var.r+age/8)/1.5)*40 +cos((var.r+age/8)/4)*40, 0, 1), 0, 1)",
					"left_blink.sy": " clamp((1.5 -abs(sin(var.r+age/8)*6))*clamp(-32 +cos((var.r+age/8)/1.5)*40 +cos((var.r+age/8)/4)*40, 0, 1), 0, 1)",
					"brow.rz": "torad(clamp( head_yaw/6, -10, 10))*clamp(-sin(var.r+age/80)*6, 0, 1) -sin(limb_swing/1.5)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"brow.ty": "      -28.5 +if(is_child, -0.25*clamp(cos(var.r+age/120)*10, 0, 1), 0) +clamp(head_pitch/30*(1 -2*clamp(sin(var.r+age/73)*3, 0, 1)), -0.8, 0 )*1.2 +(clamp(-torad(head_yaw)/2, -0.5, 0) +clamp( torad(head_yaw)/2, -0.5, 0))*clamp(-sin(var.r+age/80)*6, 0, 1) -sin(hurt_time*pi/10)*(1.5 +sin(limb_swing/3)) +if(is_child, -0.75, 0)*clamp(limb_speed*6, 0, 1) +clamp(-8 +cos(var.r +age/40)*12, 0, 1)/6",
					"right_brow.ty": "-28.5 +if(is_child, -0.25*clamp(cos(var.r+age/120)*10, 0, 1), 0) +clamp(1 -sin(var.r+age /110)*4, -0.3, 0 ) +clamp(head_pitch/30*(1 -2*clamp(sin(var.r+age/73)*3, 0, 1)), -0.8, -0.3*clamp(sin(var.r+age/73)*3, 0, 1))*1.2 +clamp(-torad(head_yaw)/2, -0.5, 0.2)*(0.3+0.7*random(id))*clamp(-sin(var.r+age/80)*6, 0, 1) +(clamp(-torad(head_yaw)/2, -0.5, 0) +clamp( torad(head_yaw)/2, -0.5, 0))*clamp(-sin(var.r+age/80)*6, 0, 1) -sin(hurt_time*pi/10)*(1.5 +sin(limb_swing/3))",
					"left_brow.ty": " -28.5 +if(is_child, -0.25*clamp(cos(var.r+age/120)*10, 0, 1), 0) +clamp(1 -sin(var.r+age /110)*4, -0.3, 0 ) +clamp(head_pitch/30*(1 -2*clamp(sin(var.r+age/73)*3, 0, 1)), -0.8, -0.3*clamp(sin(var.r+age/73)*3, 0, 1))*1.2 +clamp( torad(head_yaw)/2, -0.5, 0.2)*(0.3+0.7*random(id))*clamp(-sin(var.r+age/80)*6, 0, 1) +(clamp(-torad(head_yaw)/2, -0.5, 0) +clamp( torad(head_yaw)/2, -0.5, 0))*clamp(-sin(var.r+age/80)*6, 0, 1) -sin(hurt_time*pi/10)*(1.5 +sin(limb_swing/3))",
					"right_brow.rz": "                                                                  clamp(   sin(var.r+age /110), 0, torad( 5)) -torad(5*random(id))/2*clamp(-4 +sin(var.r +age/97)*8, 0, 1)",
					"left_brow.rz": "                                                                   clamp(  -sin(var.r+age /110), torad(-5), 0) +torad(5*random(id))/2*clamp(-4 +sin(var.r +age/97)*8, 0, 1)",
					"nose.rx": "-sin(      limb_swing/1.2*2)/4*limb_speed/1.3 +clamp(-head.rx/1.5, -pi/4, 0)",
					"nose.rz": "-sin(-pi/4+limb_swing/1.2  )/4*limb_speed/1.3 -torad(head_yaw)/6"
				},
				{
					"right_eye.sz": "if(between(player_pos_x-pos_x, -30, 30)&&between(player_pos_y-pos_y, -30, 30)&&between(player_pos_z-pos_z, -30, 30), 1, 2)",
					"left_eye.sz": "right_eye.sz",
					"right_eye_white.sx": "2",
					"right_eye_white.sy": "clamp(1 -(r_eye_top.ty), 0.5, 3)",
					"r_eye_pupil.tx": "clamp(ctrl_r_pupil.tx, -0.5, 0.5)",
					"r_eye_pupil.ty": "clamp(ctrl_r_pupil.ty, r_eye_top.ty, 1)",
					"r_eye_pupil_up.sy": "clamp(1 -(ctrl_r_pupil.ty-0.5)              , 0.5, clamp(1-r_eye_top.ty, 0.5, 1))",
					"r_eye_pupil_do.sy": "clamp(1 +(ctrl_r_pupil.ty-0.5) -r_eye_top.ty, 0.5, 1)",
					"r_eye_pupil_in.sx": "clamp(1 -(ctrl_r_pupil.tx-0.5)              , 0.75, 1)",
					"r_eye_pupil_ou.sx": "clamp(1 +(ctrl_r_pupil.tx+0.5)              , 1, 1)",
					"right_eyelid.sy": "clamp(right_eye_white.sy, 1, 4)",
					"right_eyelid.sz": "if(right_eyelid.sy==0||right_blink.sy==0, 0, 1)",
					"right_eyelid.tz": "0",
					"left_eye_white.sx": "2",
					"left_eye_white.sy": "clamp(1 -(l_eye_top.ty), 0.5, 3)",
					"l_eye_pupil.tx": "clamp(ctrl_l_pupil.tx, -0.5, 0.5)",
					"l_eye_pupil.ty": "clamp(ctrl_l_pupil.ty, l_eye_top.ty, 1)",
					"l_eye_pupil_up.sy": "clamp(1 -(ctrl_l_pupil.ty-0.5)              , 0.5, clamp(1-l_eye_top.ty, 0.5, 1))",
					"l_eye_pupil_do.sy": "clamp(1 +(ctrl_l_pupil.ty-0.5) -l_eye_top.ty, 0.5, 1)",
					"l_eye_pupil_in.sx": "clamp(1 -(ctrl_l_pupil.tx-0.5)              , 1, 1)",
					"l_eye_pupil_ou.sx": "clamp(1 +(ctrl_l_pupil.tx+0.5)              , 0.75, 1)",
					"left_eyelid.sy": "clamp(left_eye_white.sy, 1, 4)",
					"left_eyelid.sz": "if(left_eyelid.sy==0||left_blink.sy==0, 0, 1)",
					"left_eyelid.tz": "0"
				},
				{
					"brow_part.rx": "brow.rx",
					"brow_part.ry": "brow.ry",
					"brow_part.rz": "brow.rz",
					"brow_part.tx": "brow.tx",
					"brow_part.ty": "brow.ty +24",
					"brow_part.tz": "brow.tz",
					"left_brow_part.rx": "left_brow.rx",
					"left_brow_part.ry": "left_brow.ry",
					"left_brow_part.rz": "left_brow.rz",
					"left_brow_part.tx": "left_brow.tx",
					"left_brow_part.ty": "left_brow.ty +24",
					"left_brow_part.tz": "left_brow.tz",
					"right_brow_part.rx": "right_brow.rx",
					"right_brow_part.ry": "right_brow.ry",
					"right_brow_part.rz": "right_brow.rz",
					"right_brow_part.tx": "right_brow.tx",
					"right_brow_part.ty": "right_brow.ty +24",
					"right_brow_part.tz": "right_brow.tz"
				}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [-5, -22, 0],
			"textureSize": [64, 64],
			"boxes": [
				{"coordinates": [4, 12, -2, 4, 12, 4], "textureOffset": [44, 22]}
			]
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [2, -12, 0],
			"textureSize": [64, 64],
			"boxes": [
				{"coordinates": [-4, 0, -2, 4, 12, 4], "textureOffset": [0, 22]}
			]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [5, -22, 0],
			"textureSize": [64, 64],
			"boxes": [
				{"coordinates": [-8, 12, -2, 4, 12, 4], "textureOffset": [44, 22]}
			]
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [-2, -12, 0],
			"textureSize": [64, 64],
			"boxes": [
				{"coordinates": [0, 0, -2, 4, 12, 4], "textureOffset": [0, 22]}
			]
		},
		{
			"part": "hat",
			"id": "hat",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"textureSize": [64, 64],
			"boxes": [
				{"coordinates": [-4, 24, -4, 8, 10, 8], "textureOffset": [32, 0], "sizeAdd": 0.25},
				{"coordinates": [-4, 24, -4, 8, 10, 8], "textureOffset": [0, 0]}
			],
			"submodels": [
				{
					"id": "left_eye",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [-2, 28, -4],
					"submodels": [
						{
							"id": "l_eye_top",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0.025]
						},
						{
							"id": "l_eye_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0.5, -0.5, 0],
							"submodels": [
								{
									"id": "l_eye_pupil_in",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.5, 0, 0],
									"submodels": [
										{
											"id": "l_eye_pupil_ou",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [1, 0, 0],
											"submodels": [
												{
													"id": "l_eye_pupil_do",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [-0.5, -0.5, 0],
													"submodels": [
														{
															"id": "l_eye_pupil_up",
															"invertAxis": "xy",
															"translate": [0, 1, 0],
															"boxes": [
																{
																	"coordinates": [-0.5, -1, -0.07, 1, 1, 0.3],
																	"uvNorth": [18, 21, 19, 22],
																	"uvEast": [18, 21, 19, 22],
																	"uvSouth": [18, 21, 19, 22],
																	"uvWest": [18, 21, 19, 22],
																	"uvUp": [18, 21, 19, 22],
																	"uvDown": [18, 21, 19, 22],
																	"sizeAdd": 0.005
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"id": "left_eye_white",
							"invertAxis": "xy",
							"translate": [-1, -1, 0],
							"boxes": [
								{
									"coordinates": [0, 0, -0.03, 1, 1, 0.25],
									"uvNorth": [19, 21, 20, 22],
									"uvEast": [19, 21, 20, 22],
									"uvSouth": [19, 21, 20, 22],
									"uvWest": [19, 21, 20, 22],
									"uvUp": [19, 21, 20, 22],
									"uvDown": [19, 21, 20, 22]
								}
							]
						},
						{
							"id": "left_eyelid",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -1, 1],
							"submodels": [
								{
									"id": "left_blink",
									"invertAxis": "xy",
									"translate": [0, 1, 0],
									"boxes": [
										{
											"coordinates": [-1, -1, -0.08, 2, 1, 0.3],
											"uvNorth": [18, 22, 20, 23],
											"uvEast": [18, 22, 19, 23],
											"uvSouth": [18, 22, 20, 23],
											"uvWest": [19, 22, 20, 23],
											"uvUp": [18, 22, 20, 23],
											"uvDown": [18, 22, 20, 23],
											"sizeAdd": 0.015
										}
									]
								}
							]
						},
						{
							"id": "ctrl_l_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0]
						}
					]
				},
				{
					"id": "right_eye",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [2, 28, -4],
					"submodels": [
						{
							"id": "r_eye_top",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0.025]
						},
						{
							"id": "r_eye_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-0.5, -0.5, 0],
							"submodels": [
								{
									"id": "r_eye_pupil_in",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.5, 0, 0],
									"submodels": [
										{
											"id": "r_eye_pupil_ou",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [1, 0, 0],
											"submodels": [
												{
													"id": "r_eye_pupil_do",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [-0.5, -0.5, 0],
													"submodels": [
														{
															"id": "r_eye_pupil_up",
															"invertAxis": "xy",
															"translate": [0, 1, 0],
															"boxes": [
																{
																	"coordinates": [-0.5, -1, -0.07, 1, 1, 0.3],
																	"uvNorth": [15, 21, 16, 22],
																	"uvEast": [15, 21, 16, 22],
																	"uvSouth": [15, 21, 16, 22],
																	"uvWest": [15, 21, 16, 22],
																	"uvUp": [15, 21, 16, 22],
																	"uvDown": [15, 21, 16, 22],
																	"sizeAdd": 0.005
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"id": "right_eye_white",
							"invertAxis": "xy",
							"translate": [1, -1, 0],
							"boxes": [
								{
									"coordinates": [-1, 0, -0.03, 1, 1, 0.25],
									"uvNorth": [14, 21, 15, 22],
									"uvEast": [14, 21, 15, 22],
									"uvSouth": [14, 21, 15, 22],
									"uvWest": [14, 21, 15, 22],
									"uvUp": [14, 21, 15, 22],
									"uvDown": [14, 21, 15, 22]
								}
							]
						},
						{
							"id": "right_eyelid",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -1, 1],
							"submodels": [
								{
									"id": "right_blink",
									"invertAxis": "xy",
									"translate": [0, 1, 0],
									"boxes": [
										{
											"coordinates": [-1, -1, -0.08, 2, 1, 0.3],
											"uvNorth": [14, 22, 16, 23],
											"uvEast": [14, 22, 15, 23],
											"uvSouth": [14, 22, 16, 23],
											"uvWest": [15, 22, 16, 23],
											"uvUp": [14, 22, 16, 23],
											"uvDown": [14, 22, 16, 23],
											"sizeAdd": 0.015
										}
									]
								}
							]
						},
						{
							"id": "ctrl_r_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0]
						}
					]
				},
				{
					"id": "nose",
					"invertAxis": "xy",
					"translate": [0, 26.5, -4],
					"boxes": [
						{"coordinates": [-1, -3.5, -2, 2, 4, 2], "textureOffset": [24, 0]}
					]
				},
				{
					"id": "brow",
					"invertAxis": "xy",
					"translate": [0, 28.5, -4],
					"boxes": [
						{
							"coordinates": [-3.01, -0.5, -0.15, 6.02, 1, 0.25],
							"uvNorth": [14, 20, 20, 21],
							"uvEast": [14, 20, 15, 21],
							"uvSouth": [14, 20, 20, 21],
							"uvWest": [19, 20, 20, 21],
							"uvUp": [20, 20, 14, 21],
							"uvDown": [20, 20, 14, 21]
						}
					]
				},
				{
					"id": "left_brow",
					"invertAxis": "xy",
					"translate": [-2, 28.5, -4]
				},
				{
					"id": "right_brow",
					"invertAxis": "xy",
					"translate": [2, 28.5, -4]
				},
				{
					"id": "rotation",
					"invertAxis": "xy",
					"translate": [0, 24, 0],
					"rotate": [90, 0, 0],
					"boxes": [
						{"coordinates": [-8, -8, -6, 16, 16, 1], "textureOffset": [30, 47]}
					]
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"textureSize": [64, 64],
			"boxes": [
				{"coordinates": [-4, 4, -3, 8, 20, 6], "textureOffset": [0, 38], "sizeAdd": 0.5},
				{"coordinates": [-4, 12, -3, 8, 12, 6], "textureOffset": [16, 20]}
			]
		},
		{
			"part": "hat_rim",
			"id": "hat_rim",
			"invertAxis": "xy",
			"translate": [0, -24, 0]
		}
	]
}